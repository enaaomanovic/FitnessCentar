// <auto-generated />
using System;
using FitnessCentar.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessCentar.Services.Migrations
{
    [DbContext(typeof(Ib200005rs2Context))]
    [Migration("20240119200523_seedplacanja")]
    partial class seedplacanja
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessCentar.Services.Database.Aktivnosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Aktivnos__3214EC27655B8984");

                    b.ToTable("Aktivnosti", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Naziv = "Veoma intezivno"
                        },
                        new
                        {
                            Id = 5,
                            Naziv = "Intezivno"
                        },
                        new
                        {
                            Id = 6,
                            Naziv = "Umjereno"
                        },
                        new
                        {
                            Id = 7,
                            Naziv = "Lagan tempo"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Komentari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumKomentara")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("NovostId")
                        .HasColumnType("int")
                        .HasColumnName("NovostID");

                    b.Property<string>("Tekst")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK__Komentar__3214EC274354741D");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NovostId");

                    b.ToTable("Komentari", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumKomentara = new DateTime(2023, 12, 12, 10, 55, 40, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            NovostId = 1,
                            Tekst = "Nema problema, nadoknaditi cemo termine"
                        },
                        new
                        {
                            Id = 2,
                            DatumKomentara = new DateTime(2023, 12, 12, 13, 20, 10, 0, DateTimeKind.Unspecified),
                            KorisnikId = 5,
                            NovostId = 2,
                            Tekst = "Recept je odličan"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Korisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumRegistracije")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varbinary(255)");

                    b.Property<byte[]>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varbinary(255)");

                    b.Property<string>("Pol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Tezina")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Visina")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Korisnic__3214EC2736DB7549");

                    b.ToTable("Korisnici", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "selma.kovacevic@gmail.com",
                            Ime = "Selma",
                            KorisnickoIme = "Selma",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Kovacevic",
                            Telefon = "061123123",
                            Tezina = 60m,
                            Visina = 165m
                        },
                        new
                        {
                            Id = 2,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin.admin@gmail.com",
                            Ime = "Admin",
                            KorisnickoIme = "Admin",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Admin",
                            Telefon = "061123123",
                            Tezina = 60m,
                            Visina = 165m
                        },
                        new
                        {
                            Id = 3,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "husein.maric@gmail.com",
                            Ime = "Husein",
                            KorisnickoIme = "Huso",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Maric",
                            Telefon = "062545896",
                            Tezina = 90m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 4,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "benjamin.omanovic@gmail.com",
                            Ime = "Benjamin",
                            KorisnickoIme = "Benjo",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Omanovic",
                            Telefon = "062545698",
                            Tezina = 88m,
                            Visina = 192m
                        },
                        new
                        {
                            Id = 5,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(1977, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sanela.omanovic@gmail.com",
                            Ime = "Sanela",
                            KorisnickoIme = "Sanela",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Omanovic",
                            Telefon = "062548521",
                            Tezina = 70m,
                            Visina = 175m
                        },
                        new
                        {
                            Id = 6,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bakir.leto@gmail.com",
                            Ime = "Bakir",
                            KorisnickoIme = "Bakir",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Leto",
                            Telefon = "061254569",
                            Tezina = 88m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 7,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(1996, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "faruk.tinjak@gmail.com",
                            Ime = "Faruk",
                            KorisnickoIme = "Faruk",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Tinjak",
                            Telefon = "062548865",
                            Tezina = 88m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 8,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ena.omanovic@gamil.com",
                            Ime = "Ena",
                            KorisnickoIme = "Ena",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Omanovic",
                            Slika = new byte[] { 255, 216, 255, 224, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 96, 0, 96, 0, 0, 255, 225, 28, 84, 69, 120, 105, 102, 0, 0, 77, 77, 0, 42, 0, 0, 0, 8, 0, 6, 0, 11, 0, 2, 0, 0, 0, 38, 0, 0, 8, 98, 1, 18, 0, 3, 0, 0, 0, 1, 0, 1, 0, 0, 1, 49, 0, 2, 0, 0, 0, 38, 0, 0, 8, 136, 1, 50, 0, 2, 0, 0, 0, 20, 0, 0, 8, 174, 135, 105, 0, 4, 0, 0, 0, 1, 0, 0, 8, 194, 234, 28, 0, 7, 0, 0, 8, 12, 0, 0, 0, 86, 0, 0, 17, 70, 28, 234, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 105, 110, 100, 111, 119, 115, 32, 80, 104, 111, 116, 111, 32, 69, 100, 105, 116, 111, 114, 32, 49, 48, 46, 48, 46, 49, 48, 48, 49, 49, 46, 49, 54, 51, 56, 52, 0, 87, 105, 110, 100, 111, 119, 115, 32, 80, 104, 111, 116, 111, 32, 69, 100, 105, 116, 111, 114, 32, 49, 48, 46, 48, 46, 49, 48, 48, 49, 49, 46, 49, 54, 51, 56, 52, 0, 50, 48, 50, 49, 58, 48, 51, 58, 50, 55, 32, 49, 50, 58, 51, 56, 58, 53, 53, 0, 0, 6, 144, 3, 0, 2, 0, 0, 0, 20, 0, 0, 17, 28, 144, 4, 0, 2, 0, 0, 0, 20, 0, 0, 17, 48, 146, 145, 0, 2, 0, 0, 0, 3, 55, 54, 0, 0, 146, 146, 0, 2, 0, 0, 0, 3, 55, 54, 0, 0, 160, 1, 0, 3, 0, 0, 0, 1, 0, 1, 0, 0, 234, 28, 0, 7, 0, 0, 8, 12, 0, 0, 9, 16, 0, 0, 0, 0, 28, 234, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 48, 50, 49, 58, 48, 51, 58, 50, 52, 32, 48, 57, 58, 49, 50, 58, 53, 55, 0, 50, 48, 50, 49, 58, 48, 51, 58, 50, 52, 32, 48, 57, 58, 49, 50, 58, 53, 55, 0, 0, 0, 0, 6, 1, 3, 0, 3, 0, 0, 0, 1, 0, 6, 0, 0, 1, 26, 0, 5, 0, 0, 0, 1, 0, 0, 17, 148, 1, 27, 0, 5, 0, 0, 0, 1, 0, 0, 17, 156, 1, 40, 0, 3, 0, 0, 0, 1, 0, 2, 0, 0, 2, 1, 0, 4, 0, 0, 0, 1, 0, 0, 17, 164, 2, 2, 0, 4, 0, 0, 0, 1, 0, 0, 10, 168, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 1, 0, 0, 0, 96, 0, 0, 0, 1, 255, 216, 255, 219, 0, 67, 0, 8, 6, 6, 7, 6, 5, 8, 7, 7, 7, 9, 9, 8, 10, 12, 20, 13, 12, 11, 11, 12, 25, 18, 19, 15, 20, 29, 26, 31, 30, 29, 26, 28, 28, 32, 36, 46, 39, 32, 34, 44, 35, 28, 28, 40, 55, 41, 44, 48, 49, 52, 52, 52, 31, 39, 57, 61, 56, 50, 60, 46, 51, 52, 50, 255, 219, 0, 67, 1, 9, 9, 9, 12, 11, 12, 24, 13, 13, 24, 50, 33, 28, 33, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 255, 192, 0, 17, 8, 0, 102, 0, 100, 3, 1, 33, 0, 2, 17, 1, 3, 17, 1, 255, 196, 0, 31, 0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 255, 196, 0, 181, 16, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125, 1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 196, 0, 31, 1, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 255, 196, 0, 181, 17, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119, 0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 218, 0, 12, 3, 1, 0, 2, 17, 3, 17, 0, 63, 0, 238, 52, 223, 14, 232, 45, 164, 217, 51, 104, 122, 91, 49, 182, 140, 146, 108, 227, 36, 157, 131, 158, 149, 96, 248, 115, 64, 255, 0, 160, 22, 151, 255, 0, 128, 113, 255, 0, 133, 34, 136, 155, 195, 154, 15, 253, 0, 244, 191, 252, 3, 143, 252, 42, 51, 225, 205, 8, 158, 52, 61, 51, 255, 0, 0, 227, 255, 0, 10, 0, 193, 213, 174, 188, 19, 163, 200, 98, 184, 211, 180, 199, 152, 117, 142, 27, 40, 220, 175, 215, 140, 10, 231, 166, 241, 111, 132, 86, 82, 34, 240, 189, 163, 168, 234, 77, 180, 64, 254, 91, 105, 92, 165, 19, 103, 70, 212, 188, 21, 172, 176, 142, 45, 39, 78, 134, 83, 209, 38, 179, 140, 100, 250, 3, 140, 87, 72, 60, 57, 160, 244, 254, 196, 211, 63, 240, 14, 63, 240, 161, 59, 137, 171, 14, 255, 0, 132, 111, 66, 255, 0, 160, 30, 153, 255, 0, 128, 113, 255, 0, 133, 31, 240, 142, 104, 95, 244, 3, 211, 63, 240, 14, 63, 240, 166, 2, 127, 194, 57, 161, 127, 208, 15, 76, 255, 0, 192, 56, 255, 0, 194, 143, 248, 71, 52, 44, 127, 200, 15, 76, 255, 0, 192, 56, 255, 0, 194, 129, 9, 255, 0, 8, 222, 133, 255, 0, 64, 77, 51, 255, 0, 1, 35, 255, 0, 10, 40, 11, 35, 83, 76, 255, 0, 144, 69, 143, 253, 123, 69, 255, 0, 160, 10, 176, 198, 128, 35, 198, 107, 128, 241, 191, 139, 37, 183, 145, 244, 157, 54, 93, 146, 1, 139, 137, 148, 242, 191, 236, 131, 216, 250, 154, 82, 118, 69, 69, 93, 158, 111, 228, 238, 62, 180, 251, 111, 15, 106, 55, 243, 6, 178, 130, 87, 117, 57, 44, 163, 0, 126, 53, 157, 236, 106, 162, 228, 244, 54, 117, 63, 10, 106, 86, 51, 71, 117, 111, 106, 219, 100, 64, 100, 65, 213, 91, 189, 117, 126, 8, 241, 96, 185, 147, 251, 34, 249, 219, 206, 83, 182, 38, 147, 239, 127, 186, 127, 165, 17, 146, 108, 39, 77, 197, 29, 237, 21, 169, 136, 82, 80, 1, 69, 0, 26, 103, 252, 129, 236, 63, 235, 218, 47, 253, 0, 84, 239, 64, 138, 122, 133, 216, 211, 244, 219, 155, 198, 233, 4, 76, 248, 250, 14, 63, 90, 240, 167, 119, 184, 149, 229, 144, 229, 228, 98, 204, 79, 114, 121, 168, 147, 52, 166, 58, 218, 23, 184, 188, 134, 210, 63, 191, 43, 133, 7, 235, 94, 205, 165, 216, 193, 167, 216, 197, 105, 8, 249, 81, 121, 61, 216, 247, 38, 177, 155, 58, 232, 45, 217, 105, 199, 28, 215, 1, 227, 189, 49, 96, 142, 45, 118, 205, 4, 119, 86, 174, 166, 70, 81, 141, 201, 158, 255, 0, 67, 131, 249, 212, 71, 70, 107, 81, 115, 65, 158, 129, 166, 222, 174, 163, 165, 218, 222, 167, 73, 226, 87, 252, 72, 231, 245, 171, 53, 216, 121, 128, 105, 40, 0, 162, 129, 11, 166, 143, 248, 147, 216, 127, 215, 180, 95, 250, 0, 169, 31, 173, 0, 115, 126, 57, 184, 251, 63, 132, 47, 121, 193, 147, 108, 99, 241, 97, 94, 54, 242, 237, 57, 244, 21, 156, 183, 53, 134, 198, 191, 132, 166, 133, 188, 79, 28, 211, 54, 18, 20, 105, 0, 3, 36, 158, 131, 3, 185, 230, 189, 31, 254, 18, 123, 72, 102, 17, 155, 75, 236, 244, 201, 128, 129, 88, 201, 106, 117, 209, 126, 233, 170, 183, 241, 207, 111, 230, 170, 144, 164, 116, 60, 98, 185, 77, 110, 254, 247, 83, 183, 184, 177, 182, 179, 183, 242, 229, 67, 25, 146, 121, 112, 14, 71, 97, 82, 154, 190, 166, 173, 52, 172, 139, 223, 13, 110, 218, 231, 193, 241, 68, 231, 47, 109, 43, 196, 127, 60, 255, 0, 90, 235, 235, 173, 30, 91, 220, 78, 41, 41, 128, 148, 80, 33, 250, 119, 252, 129, 236, 63, 235, 214, 47, 253, 0, 83, 156, 243, 64, 28, 119, 196, 115, 255, 0, 20, 194, 174, 122, 220, 39, 245, 175, 27, 185, 144, 169, 96, 79, 95, 254, 181, 103, 45, 205, 99, 240, 157, 55, 195, 168, 110, 110, 117, 27, 249, 237, 128, 243, 35, 136, 42, 231, 220, 255, 0, 245, 171, 174, 178, 211, 117, 137, 47, 101, 109, 70, 114, 200, 84, 121, 104, 137, 141, 175, 220, 147, 220, 126, 53, 148, 173, 119, 115, 170, 159, 55, 42, 177, 208, 36, 27, 109, 46, 45, 203, 100, 149, 224, 215, 63, 47, 135, 103, 150, 89, 90, 43, 153, 246, 75, 179, 102, 95, 136, 128, 235, 129, 223, 62, 245, 17, 105, 26, 202, 45, 219, 82, 31, 133, 225, 236, 110, 53, 205, 34, 92, 239, 183, 152, 55, 215, 146, 63, 194, 189, 20, 215, 84, 118, 60, 217, 43, 59, 13, 162, 168, 66, 81, 64, 133, 211, 207, 252, 73, 236, 63, 235, 214, 47, 253, 0, 82, 185, 230, 128, 57, 15, 136, 131, 119, 134, 148, 255, 0, 118, 117, 53, 227, 247, 241, 125, 226, 59, 103, 250, 86, 82, 248, 141, 162, 189, 195, 178, 248, 72, 234, 137, 169, 49, 63, 49, 116, 31, 135, 53, 234, 2, 101, 193, 245, 172, 103, 241, 51, 186, 138, 253, 218, 49, 102, 190, 154, 206, 255, 0, 115, 218, 188, 144, 150, 33, 152, 48, 194, 142, 220, 117, 53, 98, 210, 227, 116, 12, 204, 187, 1, 99, 133, 207, 65, 89, 155, 28, 223, 133, 110, 17, 190, 39, 107, 201, 25, 249, 94, 21, 7, 29, 200, 11, 154, 244, 74, 237, 135, 194, 121, 53, 126, 54, 54, 138, 162, 4, 162, 128, 27, 167, 255, 0, 200, 34, 195, 254, 189, 162, 255, 0, 208, 5, 61, 168, 17, 202, 248, 245, 55, 248, 108, 243, 143, 223, 37, 121, 61, 210, 131, 41, 227, 57, 56, 253, 43, 25, 124, 70, 240, 248, 13, 31, 135, 247, 66, 203, 84, 184, 130, 70, 218, 179, 112, 15, 191, 106, 245, 20, 89, 101, 82, 177, 200, 18, 66, 56, 98, 50, 5, 99, 83, 115, 178, 131, 247, 17, 66, 225, 53, 93, 216, 107, 208, 160, 127, 207, 56, 65, 207, 230, 105, 161, 164, 211, 180, 217, 238, 175, 238, 89, 213, 1, 98, 88, 1, 129, 248, 84, 29, 51, 112, 81, 208, 228, 190, 31, 76, 223, 240, 155, 180, 242, 253, 235, 181, 144, 159, 169, 231, 21, 236, 29, 171, 178, 27, 30, 61, 77, 198, 210, 85, 153, 133, 20, 0, 154, 112, 255, 0, 137, 61, 135, 253, 122, 197, 255, 0, 160, 10, 149, 133, 0, 115, 30, 56, 76, 248, 106, 67, 253, 217, 80, 254, 181, 228, 215, 3, 133, 111, 246, 135, 63, 157, 97, 63, 140, 233, 165, 240, 21, 160, 129, 132, 210, 149, 36, 103, 230, 5, 122, 142, 107, 170, 210, 252, 97, 125, 166, 132, 143, 81, 136, 203, 24, 233, 42, 247, 21, 156, 245, 58, 41, 221, 35, 176, 180, 241, 166, 141, 112, 128, 9, 215, 204, 61, 20, 142, 107, 130, 241, 135, 139, 225, 215, 38, 93, 62, 192, 177, 180, 141, 183, 76, 248, 199, 152, 195, 160, 250, 15, 212, 226, 148, 35, 169, 85, 102, 185, 109, 220, 139, 194, 183, 6, 223, 196, 154, 108, 167, 180, 161, 91, 254, 5, 255, 0, 235, 175, 111, 34, 186, 41, 156, 85, 86, 168, 109, 21, 161, 144, 102, 138, 4, 59, 77, 31, 241, 39, 176, 255, 0, 175, 104, 191, 244, 1, 83, 50, 208, 6, 7, 139, 98, 243, 60, 53, 121, 254, 200, 86, 252, 152, 87, 144, 92, 38, 34, 62, 206, 191, 206, 185, 234, 252, 71, 85, 15, 129, 146, 65, 136, 238, 97, 112, 1, 246, 199, 80, 107, 178, 176, 210, 35, 146, 0, 8, 73, 33, 60, 170, 176, 229, 125, 171, 29, 217, 212, 150, 132, 211, 233, 54, 118, 225, 76, 112, 162, 176, 61, 64, 175, 37, 16, 136, 47, 110, 76, 135, 10, 178, 177, 199, 175, 60, 10, 210, 12, 202, 170, 217, 151, 180, 251, 182, 93, 183, 25, 249, 132, 139, 38, 127, 42, 250, 18, 222, 81, 113, 107, 20, 202, 114, 36, 64, 192, 253, 69, 107, 79, 118, 142, 122, 187, 38, 56, 210, 102, 181, 48, 18, 138, 0, 155, 76, 255, 0, 144, 61, 135, 253, 122, 197, 255, 0, 160, 10, 156, 138, 0, 202, 215, 214, 63, 236, 27, 239, 53, 213, 19, 201, 110, 88, 224, 103, 183, 235, 94, 47, 118, 63, 209, 228, 32, 127, 116, 255, 0, 159, 202, 185, 235, 124, 72, 235, 195, 252, 44, 72, 217, 124, 248, 65, 60, 30, 51, 94, 137, 161, 228, 217, 133, 32, 228, 14, 43, 14, 167, 95, 66, 123, 136, 36, 153, 24, 40, 232, 9, 175, 55, 241, 70, 137, 246, 75, 168, 238, 0, 196, 82, 140, 19, 232, 213, 105, 217, 145, 53, 116, 115, 150, 141, 182, 29, 135, 130, 9, 83, 249, 215, 163, 232, 255, 0, 16, 46, 172, 52, 171, 107, 121, 44, 162, 157, 99, 64, 129, 183, 149, 108, 14, 43, 88, 187, 72, 229, 168, 175, 4, 119, 154, 70, 183, 99, 174, 90, 249, 214, 146, 124, 224, 2, 241, 55, 14, 159, 81, 233, 239, 87, 143, 21, 178, 103, 48, 153, 52, 83, 2, 125, 51, 254, 64, 246, 31, 245, 235, 23, 254, 128, 40, 212, 47, 237, 52, 203, 70, 185, 188, 157, 97, 137, 123, 158, 164, 250, 1, 220, 208, 7, 146, 120, 187, 196, 179, 248, 134, 85, 142, 16, 240, 217, 68, 115, 28, 100, 242, 231, 251, 205, 253, 7, 106, 197, 86, 18, 91, 49, 111, 78, 127, 63, 254, 189, 114, 214, 232, 206, 188, 55, 84, 85, 151, 43, 104, 36, 31, 122, 51, 159, 200, 215, 99, 162, 248, 195, 79, 182, 178, 81, 52, 115, 239, 83, 131, 132, 7, 250, 212, 37, 115, 121, 77, 71, 114, 240, 241, 230, 157, 18, 176, 91, 59, 137, 15, 110, 84, 127, 90, 229, 117, 221, 106, 109, 113, 89, 4, 9, 111, 7, 80, 138, 114, 79, 212, 159, 233, 90, 168, 91, 115, 9, 215, 186, 178, 57, 33, 25, 89, 88, 30, 255, 0, 204, 86, 181, 167, 48, 176, 61, 1, 200, 164, 221, 164, 22, 188, 25, 110, 195, 82, 184, 210, 175, 226, 188, 182, 114, 175, 27, 103, 30, 163, 184, 62, 198, 189, 182, 41, 146, 230, 218, 43, 136, 254, 228, 168, 29, 126, 132, 102, 183, 71, 40, 102, 138, 161, 21, 103, 214, 237, 180, 47, 12, 233, 247, 55, 10, 238, 90, 222, 36, 142, 52, 234, 231, 96, 63, 128, 247, 175, 46, 214, 181, 139, 221, 114, 245, 174, 110, 143, 3, 132, 141, 126, 236, 99, 208, 15, 235, 83, 38, 6, 110, 220, 14, 121, 205, 53, 7, 201, 34, 254, 31, 157, 97, 87, 99, 171, 12, 253, 240, 128, 7, 130, 225, 27, 251, 187, 191, 14, 245, 90, 217, 0, 4, 48, 25, 220, 51, 249, 99, 250, 84, 65, 234, 109, 90, 55, 69, 181, 140, 103, 166, 41, 197, 57, 244, 173, 206, 19, 42, 246, 29, 146, 23, 80, 9, 198, 225, 245, 171, 214, 48, 239, 25, 67, 144, 235, 197, 99, 61, 25, 219, 73, 94, 35, 38, 224, 145, 94, 189, 225, 59, 159, 181, 120, 82, 193, 179, 146, 136, 99, 63, 240, 18, 71, 248, 87, 76, 78, 23, 185, 173, 69, 80, 142, 15, 198, 183, 68, 218, 232, 86, 184, 249, 82, 197, 36, 39, 212, 149, 3, 250, 87, 44, 58, 10, 205, 238, 52, 49, 240, 184, 192, 250, 212, 81, 243, 51, 14, 196, 127, 141, 101, 87, 225, 55, 161, 252, 68, 37, 177, 219, 117, 176, 255, 0, 18, 149, 63, 141, 85, 87, 218, 195, 142, 192, 254, 184, 172, 99, 185, 217, 81, 123, 165, 245, 228, 82, 244, 63, 133, 117, 30, 113, 86, 237, 119, 69, 158, 56, 57, 20, 221, 50, 98, 135, 203, 57, 32, 147, 143, 98, 43, 10, 167, 102, 25, 232, 75, 169, 71, 182, 84, 145, 112, 3, 231, 35, 222, 189, 15, 225, 212, 197, 244, 11, 152, 143, 252, 178, 184, 56, 252, 84, 26, 222, 147, 188, 81, 203, 90, 60, 179, 104, 235, 40, 173, 76, 143, 255, 217, 255, 237, 0, 172, 80, 104, 111, 116, 111, 115, 104, 111, 112, 32, 51, 46, 48, 0, 56, 66, 73, 77, 4, 4, 0, 0, 0, 0, 0, 116, 28, 1, 90, 0, 3, 27, 37, 71, 28, 2, 40, 0, 74, 70, 66, 77, 68, 48, 102, 48, 48, 48, 55, 53, 55, 48, 49, 48, 48, 48, 48, 53, 55, 49, 53, 48, 48, 48, 48, 55, 50, 50, 102, 48, 48, 48, 48, 53, 57, 51, 49, 48, 48, 48, 48, 51, 49, 51, 52, 48, 48, 48, 48, 56, 51, 51, 97, 48, 48, 48, 48, 53, 50, 54, 55, 48, 48, 48, 48, 54, 57, 54, 55, 48, 48, 48, 48, 28, 2, 55, 0, 8, 50, 48, 50, 49, 48, 51, 50, 52, 28, 2, 60, 0, 11, 48, 57, 49, 50, 53, 55, 43, 48, 48, 48, 48, 56, 66, 73, 77, 4, 37, 0, 0, 0, 0, 0, 16, 93, 100, 172, 243, 76, 23, 243, 114, 53, 80, 139, 153, 6, 35, 119, 41, 255, 225, 49, 232, 104, 116, 116, 112, 58, 47, 47, 110, 115, 46, 97, 100, 111, 98, 101, 46, 99, 111, 109, 47, 120, 97, 112, 47, 49, 46, 48, 47, 0, 60, 63, 120, 112, 97, 99, 107, 101, 116, 32, 98, 101, 103, 105, 110, 61, 39, 239, 187, 191, 39, 32, 105, 100, 61, 39, 87, 53, 77, 48, 77, 112, 67, 101, 104, 105, 72, 122, 114, 101, 83, 122, 78, 84, 99, 122, 107, 99, 57, 100, 39, 63, 62, 13, 10, 60, 120, 58, 120, 109, 112, 109, 101, 116, 97, 32, 120, 109, 108, 110, 115, 58, 120, 61, 34, 97, 100, 111, 98, 101, 58, 110, 115, 58, 109, 101, 116, 97, 47, 34, 62, 60, 114, 100, 102, 58, 82, 68, 70, 32, 120, 109, 108, 110, 115, 58, 114, 100, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 51, 46, 111, 114, 103, 47, 49, 57, 57, 57, 47, 48, 50, 47, 50, 50, 45, 114, 100, 102, 45, 115, 121, 110, 116, 97, 120, 45, 110, 115, 35, 34, 62, 60, 114, 100, 102, 58, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 114, 100, 102, 58, 97, 98, 111, 117, 116, 61, 34, 117, 117, 105, 100, 58, 102, 97, 102, 53, 98, 100, 100, 53, 45, 98, 97, 51, 100, 45, 49, 49, 100, 97, 45, 97, 100, 51, 49, 45, 100, 51, 51, 100, 55, 53, 49, 56, 50, 102, 49, 98, 34, 32, 120, 109, 108, 110, 115, 58, 120, 109, 112, 61, 34, 104, 116, 116, 112, 58, 47, 47, 110, 115, 46, 97, 100, 111, 98, 101, 46, 99, 111, 109, 47, 120, 97, 112, 47, 49, 46, 48, 47, 34, 62, 60, 120, 109, 112, 58, 67, 114, 101, 97, 116, 111, 114, 84, 111, 111, 108, 62, 87, 105, 110, 100, 111, 119, 115, 32, 80, 104, 111, 116, 111, 32, 69, 100, 105, 116, 111, 114, 32, 49, 48, 46, 48, 46, 49, 48, 48, 49, 49, 46, 49, 54, 51, 56, 52, 60, 47, 120, 109, 112, 58, 67, 114, 101, 97, 116, 111, 114, 84, 111, 111, 108, 62, 60, 120, 109, 112, 58, 67, 114, 101, 97, 116, 101, 68, 97, 116, 101, 62, 50, 48, 50, 49, 45, 48, 51, 45, 50, 52, 84, 48, 57, 58, 49, 50, 58, 53, 55, 46, 55, 53, 55, 60, 47, 120, 109, 112, 58, 67, 114, 101, 97, 116, 101, 68, 97, 116, 101, 62, 60, 47, 114, 100, 102, 58, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 62, 60, 47, 114, 100, 102, 58, 82, 68, 70, 62, 60, 47, 120, 58, 120, 109, 112, 109, 101, 116, 97, 62, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 63, 120, 112, 97, 99, 107, 101, 116, 32, 101, 110, 100, 61, 39, 119, 39, 63, 62, 255, 219, 0, 67, 0, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 5, 3, 3, 3, 3, 3, 6, 4, 4, 3, 5, 7, 6, 7, 7, 7, 6, 7, 7, 8, 9, 11, 9, 8, 8, 10, 8, 7, 7, 10, 13, 10, 10, 11, 12, 12, 12, 12, 7, 9, 14, 15, 13, 12, 14, 11, 12, 12, 12, 255, 219, 0, 67, 1, 2, 2, 2, 3, 3, 3, 6, 3, 3, 6, 12, 8, 7, 8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 255, 192, 0, 17, 8, 0, 102, 0, 100, 3, 1, 34, 0, 2, 17, 1, 3, 17, 1, 255, 196, 0, 31, 0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 255, 196, 0, 181, 16, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125, 1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 196, 0, 31, 1, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 255, 196, 0, 181, 17, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119, 0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 218, 0, 12, 3, 1, 0, 2, 17, 3, 17, 0, 63, 0, 253, 121, 241, 39, 143, 181, 107, 93, 110, 120, 210, 250, 225, 85, 48, 0, 222, 127, 186, 43, 46, 227, 226, 54, 176, 87, 254, 66, 87, 67, 233, 33, 168, 60, 92, 127, 226, 162, 186, 250, 143, 253, 4, 86, 37, 228, 195, 111, 225, 222, 179, 58, 11, 247, 95, 18, 117, 205, 220, 106, 151, 191, 132, 166, 168, 75, 241, 31, 94, 145, 254, 93, 91, 80, 249, 142, 0, 19, 55, 248, 214, 115, 71, 230, 231, 230, 250, 123, 215, 192, 127, 240, 84, 143, 248, 40, 70, 161, 224, 237, 78, 251, 225, 159, 128, 117, 6, 179, 190, 137, 10, 120, 131, 86, 183, 124, 77, 110, 72, 255, 0, 143, 88, 91, 248, 91, 7, 231, 113, 200, 206, 209, 140, 53, 69, 74, 138, 10, 236, 210, 149, 23, 82, 92, 177, 62, 148, 253, 161, 127, 224, 170, 222, 9, 253, 155, 181, 89, 180, 221, 115, 199, 122, 149, 230, 177, 15, 18, 233, 250, 83, 181, 228, 246, 231, 210, 66, 164, 34, 31, 246, 89, 179, 237, 95, 61, 248, 139, 254, 14, 42, 208, 172, 181, 134, 139, 77, 210, 188, 109, 127, 106, 128, 22, 145, 245, 5, 134, 80, 59, 159, 44, 110, 227, 241, 175, 205, 19, 225, 207, 183, 72, 216, 102, 145, 189, 9, 200, 207, 82, 199, 187, 115, 235, 212, 250, 213, 175, 3, 126, 199, 126, 58, 248, 179, 226, 8, 110, 60, 35, 163, 106, 218, 133, 245, 171, 9, 100, 184, 133, 118, 36, 30, 131, 119, 11, 184, 143, 194, 185, 37, 137, 178, 188, 157, 143, 66, 158, 1, 183, 104, 46, 102, 126, 196, 254, 205, 95, 240, 88, 127, 5, 254, 211, 23, 80, 217, 105, 254, 44, 214, 180, 61, 82, 98, 22, 59, 109, 86, 111, 41, 102, 99, 252, 41, 32, 98, 165, 189, 142, 9, 237, 154, 250, 62, 47, 137, 122, 243, 182, 223, 237, 141, 75, 119, 161, 157, 178, 63, 90, 252, 77, 248, 235, 255, 0, 4, 250, 241, 247, 194, 191, 16, 88, 248, 147, 67, 240, 237, 195, 91, 106, 214, 113, 205, 168, 217, 196, 64, 107, 91, 128, 160, 75, 194, 241, 243, 54, 91, 142, 57, 175, 171, 191, 224, 150, 159, 240, 80, 184, 188, 107, 171, 47, 194, 255, 0, 24, 94, 92, 13, 106, 213, 190, 205, 165, 205, 122, 113, 58, 178, 143, 248, 245, 144, 158, 73, 192, 202, 49, 206, 112, 71, 165, 58, 56, 200, 201, 218, 225, 137, 203, 170, 81, 143, 52, 162, 209, 250, 22, 191, 17, 117, 224, 191, 242, 24, 212, 63, 239, 251, 127, 141, 39, 252, 44, 125, 127, 31, 242, 22, 212, 63, 239, 251, 127, 141, 100, 237, 201, 232, 113, 244, 166, 215, 105, 231, 155, 7, 226, 62, 188, 63, 230, 47, 168, 255, 0, 223, 230, 255, 0, 26, 107, 124, 71, 241, 0, 79, 249, 12, 106, 11, 235, 251, 246, 255, 0, 26, 201, 35, 53, 25, 235, 235, 64, 172, 107, 31, 136, 190, 32, 111, 249, 140, 106, 31, 248, 16, 223, 227, 69, 100, 110, 255, 0, 56, 162, 129, 114, 163, 187, 241, 128, 199, 136, 174, 126, 163, 255, 0, 65, 21, 207, 234, 13, 185, 121, 249, 190, 181, 213, 120, 218, 61, 186, 237, 199, 126, 87, 175, 251, 162, 185, 61, 65, 199, 153, 211, 173, 4, 156, 159, 198, 15, 136, 145, 252, 33, 248, 79, 226, 79, 20, 204, 3, 69, 225, 221, 50, 123, 253, 167, 163, 52, 104, 74, 175, 226, 219, 71, 227, 95, 133, 58, 150, 167, 119, 226, 237, 102, 243, 82, 190, 145, 166, 189, 213, 39, 123, 171, 151, 111, 153, 158, 71, 98, 236, 79, 185, 99, 250, 215, 235, 143, 252, 21, 103, 198, 63, 240, 135, 126, 194, 190, 52, 34, 79, 45, 181, 67, 107, 166, 175, 191, 153, 58, 110, 31, 247, 202, 154, 252, 113, 212, 117, 239, 178, 184, 112, 203, 185, 87, 113, 31, 150, 223, 231, 94, 126, 46, 79, 157, 68, 245, 178, 248, 165, 7, 35, 167, 240, 71, 134, 110, 124, 95, 227, 205, 35, 195, 86, 57, 251, 102, 183, 116, 150, 177, 190, 58, 22, 96, 51, 249, 87, 236, 191, 192, 111, 133, 186, 47, 193, 223, 135, 122, 103, 134, 116, 184, 182, 193, 99, 10, 171, 202, 121, 123, 137, 49, 243, 200, 199, 185, 39, 63, 65, 129, 208, 87, 228, 247, 252, 19, 187, 196, 122, 77, 255, 0, 237, 133, 166, 234, 218, 180, 198, 59, 45, 10, 206, 226, 253, 99, 72, 204, 146, 73, 38, 223, 46, 37, 68, 25, 44, 228, 190, 64, 2, 191, 70, 71, 237, 209, 225, 127, 14, 107, 145, 217, 203, 225, 143, 31, 249, 140, 118, 135, 125, 14, 68, 143, 63, 82, 122, 123, 215, 137, 140, 230, 148, 148, 122, 35, 236, 178, 53, 8, 211, 149, 71, 187, 118, 251, 143, 113, 213, 45, 192, 143, 12, 185, 24, 245, 237, 95, 1, 255, 0, 193, 88, 126, 5, 195, 225, 77, 55, 75, 248, 205, 225, 107, 88, 244, 223, 20, 248, 46, 246, 9, 111, 167, 182, 65, 25, 188, 179, 50, 15, 153, 241, 247, 154, 41, 10, 56, 99, 200, 93, 195, 165, 125, 189, 97, 241, 98, 195, 197, 94, 21, 93, 78, 24, 100, 142, 22, 93, 219, 101, 93, 172, 158, 196, 122, 215, 202, 191, 181, 23, 197, 175, 22, 124, 114, 240, 183, 136, 60, 27, 160, 120, 95, 195, 131, 79, 213, 236, 228, 176, 146, 251, 89, 212, 252, 149, 117, 145, 10, 157, 168, 160, 157, 195, 60, 103, 218, 185, 40, 205, 70, 162, 148, 89, 234, 227, 41, 251, 76, 60, 169, 212, 87, 190, 221, 79, 178, 254, 8, 124, 77, 183, 248, 209, 240, 115, 194, 254, 44, 180, 43, 228, 248, 139, 76, 134, 247, 3, 162, 187, 40, 222, 191, 131, 110, 31, 133, 116, 228, 124, 223, 210, 190, 68, 255, 0, 130, 32, 124, 69, 155, 198, 223, 176, 118, 153, 166, 221, 200, 178, 94, 120, 75, 84, 186, 210, 37, 1, 179, 180, 6, 222, 7, 211, 230, 108, 87, 215, 110, 9, 254, 181, 246, 84, 228, 218, 63, 40, 169, 27, 73, 161, 147, 32, 90, 137, 147, 53, 59, 42, 237, 168, 155, 29, 179, 90, 18, 53, 121, 94, 180, 81, 183, 63, 254, 170, 40, 38, 200, 244, 79, 30, 54, 221, 122, 227, 254, 3, 255, 0, 160, 138, 226, 245, 43, 143, 223, 227, 154, 235, 60, 127, 58, 167, 136, 46, 56, 233, 183, 255, 0, 65, 21, 196, 234, 179, 230, 74, 9, 62, 70, 255, 0, 130, 214, 220, 236, 253, 143, 96, 135, 118, 223, 59, 196, 22, 124, 122, 224, 57, 175, 199, 15, 27, 107, 15, 98, 243, 35, 51, 2, 196, 156, 250, 0, 83, 31, 206, 191, 98, 191, 224, 179, 48, 125, 179, 246, 72, 134, 67, 150, 107, 125, 110, 217, 128, 30, 251, 151, 255, 0, 102, 175, 200, 31, 139, 26, 17, 205, 212, 139, 252, 27, 202, 231, 175, 30, 89, 254, 181, 229, 215, 127, 191, 179, 61, 140, 44, 95, 213, 185, 151, 118, 125, 21, 255, 0, 4, 99, 240, 215, 136, 60, 109, 241, 83, 199, 154, 198, 130, 177, 181, 254, 149, 165, 164, 16, 239, 96, 184, 103, 114, 48, 24, 131, 143, 245, 125, 107, 235, 207, 134, 31, 5, 126, 41, 235, 95, 16, 245, 73, 188, 117, 171, 205, 117, 105, 53, 178, 46, 157, 103, 105, 100, 21, 173, 46, 243, 243, 180, 146, 156, 150, 136, 0, 112, 119, 2, 115, 247, 87, 165, 124, 255, 0, 255, 0, 6, 239, 234, 176, 233, 186, 127, 196, 169, 228, 101, 91, 137, 46, 172, 211, 158, 187, 64, 148, 255, 0, 51, 95, 168, 16, 120, 150, 221, 161, 102, 63, 52, 152, 224, 15, 226, 175, 27, 21, 81, 42, 211, 78, 214, 219, 95, 208, 251, 140, 163, 7, 207, 131, 167, 53, 38, 186, 232, 237, 125, 94, 253, 215, 145, 231, 154, 119, 133, 126, 195, 224, 157, 123, 67, 105, 154, 70, 154, 2, 209, 200, 62, 242, 176, 235, 143, 76, 243, 249, 215, 129, 107, 191, 177, 150, 177, 175, 107, 90, 165, 198, 157, 226, 13, 120, 218, 235, 6, 209, 172, 188, 203, 205, 176, 104, 171, 27, 6, 148, 199, 24, 226, 67, 38, 8, 33, 199, 25, 60, 244, 53, 235, 62, 37, 248, 167, 171, 124, 56, 248, 153, 231, 93, 120, 110, 247, 80, 210, 101, 157, 163, 184, 185, 138, 100, 242, 237, 162, 32, 108, 96, 159, 121, 242, 78, 8, 3, 32, 243, 140, 87, 71, 240, 255, 0, 198, 127, 107, 240, 237, 196, 215, 22, 235, 99, 28, 183, 18, 24, 97, 47, 146, 145, 147, 242, 228, 246, 36, 118, 237, 92, 20, 235, 184, 54, 227, 212, 246, 43, 96, 161, 82, 209, 149, 244, 243, 103, 205, 63, 240, 65, 200, 111, 62, 21, 248, 167, 227, 143, 194, 253, 73, 153, 175, 188, 47, 172, 199, 113, 150, 254, 49, 230, 75, 17, 111, 197, 68, 109, 159, 246, 171, 244, 74, 76, 129, 197, 126, 120, 254, 192, 30, 51, 181, 187, 255, 0, 130, 194, 124, 118, 179, 177, 145, 77, 189, 238, 145, 2, 56, 94, 143, 52, 43, 110, 95, 241, 4, 159, 214, 191, 67, 159, 229, 31, 123, 216, 215, 217, 96, 229, 205, 73, 73, 238, 126, 79, 152, 83, 84, 241, 18, 140, 118, 77, 254, 26, 17, 151, 57, 232, 63, 42, 107, 28, 211, 138, 229, 190, 240, 166, 183, 74, 234, 56, 198, 116, 239, 69, 1, 115, 220, 81, 64, 172, 118, 94, 63, 118, 255, 0, 132, 138, 235, 248, 185, 31, 250, 8, 174, 66, 253, 62, 111, 229, 93, 151, 142, 161, 223, 226, 27, 175, 92, 175, 254, 130, 43, 152, 189, 182, 201, 160, 131, 228, 207, 248, 43, 126, 151, 253, 165, 251, 38, 178, 238, 218, 87, 88, 180, 32, 122, 157, 199, 21, 249, 61, 227, 187, 21, 155, 90, 97, 229, 150, 89, 37, 101, 0, 14, 205, 24, 35, 255, 0, 65, 253, 43, 245, 231, 254, 10, 157, 165, 155, 159, 217, 26, 253, 255, 0, 231, 219, 85, 178, 148, 250, 255, 0, 172, 199, 243, 34, 191, 38, 252, 103, 111, 152, 109, 230, 35, 230, 251, 68, 63, 56, 236, 74, 184, 254, 181, 225, 99, 166, 227, 137, 183, 145, 244, 185, 101, 62, 108, 35, 183, 119, 250, 29, 119, 252, 17, 247, 199, 209, 124, 47, 248, 197, 175, 104, 247, 147, 139, 91, 125, 112, 136, 99, 102, 56, 95, 57, 73, 40, 15, 212, 54, 5, 126, 163, 105, 246, 186, 142, 191, 107, 36, 58, 125, 228, 118, 87, 237, 25, 17, 205, 44, 102, 68, 143, 223, 110, 70, 126, 153, 21, 248, 203, 225, 111, 10, 205, 14, 191, 170, 201, 111, 36, 208, 249, 195, 237, 17, 201, 9, 42, 201, 181, 242, 24, 119, 202, 238, 28, 250, 129, 95, 86, 124, 8, 255, 0, 130, 145, 120, 203, 224, 148, 118, 58, 127, 142, 180, 201, 53, 75, 20, 1, 83, 84, 183, 95, 154, 100, 236, 91, 182, 113, 94, 54, 97, 23, 57, 222, 39, 214, 228, 245, 157, 26, 10, 18, 91, 31, 89, 248, 191, 74, 248, 144, 46, 194, 205, 226, 232, 173, 97, 143, 128, 52, 253, 26, 23, 18, 255, 0, 188, 36, 98, 217, 247, 57, 28, 85, 75, 123, 171, 239, 131, 31, 9, 181, 207, 17, 120, 219, 196, 55, 23, 208, 233, 241, 73, 116, 205, 115, 20, 105, 229, 198, 170, 88, 228, 168, 25, 63, 212, 128, 43, 83, 225, 247, 252, 20, 227, 225, 55, 140, 108, 146, 53, 214, 45, 62, 221, 56, 1, 109, 228, 66, 38, 220, 123, 99, 25, 175, 131, 191, 224, 164, 95, 240, 81, 141, 47, 246, 166, 215, 173, 188, 15, 224, 169, 110, 27, 194, 154, 92, 237, 113, 171, 93, 178, 24, 151, 83, 158, 54, 202, 68, 20, 242, 97, 141, 134, 226, 72, 27, 220, 40, 3, 2, 176, 161, 135, 157, 73, 121, 117, 61, 140, 207, 55, 167, 79, 14, 162, 148, 111, 210, 203, 86, 255, 0, 173, 206, 171, 254, 8, 245, 226, 107, 129, 255, 0, 5, 19, 155, 89, 212, 27, 109, 215, 141, 173, 117, 25, 101, 13, 247, 149, 220, 9, 66, 31, 113, 192, 252, 43, 245, 253, 216, 4, 197, 126, 32, 254, 192, 158, 49, 147, 193, 191, 181, 175, 195, 141, 70, 66, 202, 177, 106, 105, 5, 201, 63, 195, 246, 134, 25, 201, 255, 0, 129, 143, 202, 191, 111, 110, 35, 8, 91, 253, 147, 138, 250, 220, 190, 167, 52, 90, 236, 126, 87, 154, 82, 112, 168, 159, 117, 253, 126, 100, 68, 226, 154, 207, 133, 52, 215, 108, 26, 51, 154, 244, 15, 48, 2, 230, 138, 67, 54, 211, 69, 2, 61, 7, 198, 144, 255, 0, 197, 67, 113, 235, 149, 255, 0, 208, 69, 115, 247, 86, 161, 129, 250, 87, 81, 226, 239, 249, 15, 220, 253, 87, 255, 0, 65, 21, 137, 60, 57, 7, 211, 29, 104, 36, 249, 211, 254, 10, 35, 225, 239, 237, 127, 217, 19, 198, 24, 93, 198, 214, 56, 46, 64, 31, 236, 79, 25, 63, 166, 107, 242, 23, 198, 58, 103, 149, 164, 72, 55, 42, 249, 119, 144, 253, 115, 188, 127, 241, 85, 251, 101, 251, 93, 218, 88, 183, 236, 215, 227, 133, 212, 174, 96, 179, 179, 109, 38, 96, 210, 204, 225, 16, 54, 50, 131, 39, 187, 56, 80, 7, 82, 72, 21, 248, 191, 241, 22, 48, 222, 23, 190, 145, 21, 191, 229, 132, 164, 14, 188, 110, 39, 255, 0, 64, 235, 95, 55, 156, 62, 90, 241, 126, 95, 169, 245, 252, 61, 30, 124, 53, 69, 217, 254, 130, 120, 81, 99, 209, 188, 87, 164, 221, 42, 198, 248, 195, 50, 149, 200, 120, 220, 97, 148, 143, 67, 130, 63, 42, 251, 39, 225, 55, 236, 231, 167, 235, 126, 29, 141, 90, 59, 61, 75, 69, 145, 124, 200, 97, 153, 127, 123, 110, 15, 59, 65, 238, 163, 156, 103, 255, 0, 215, 241, 126, 141, 117, 8, 241, 46, 142, 140, 219, 86, 112, 97, 86, 61, 62, 101, 202, 227, 254, 4, 63, 90, 253, 17, 253, 150, 76, 183, 30, 2, 91, 121, 17, 217, 161, 143, 40, 195, 248, 134, 7, 234, 15, 244, 175, 11, 154, 243, 212, 251, 26, 112, 74, 26, 28, 167, 138, 63, 103, 143, 10, 248, 62, 27, 121, 108, 116, 155, 43, 89, 145, 242, 89, 16, 3, 192, 61, 255, 0, 42, 252, 151, 182, 240, 204, 126, 21, 248, 135, 226, 89, 47, 36, 41, 111, 111, 170, 77, 38, 192, 62, 105, 243, 43, 121, 72, 61, 185, 201, 236, 49, 95, 182, 30, 51, 240, 173, 231, 137, 236, 46, 22, 24, 200, 88, 163, 102, 7, 212, 128, 107, 243, 131, 246, 243, 253, 151, 255, 0, 225, 93, 120, 203, 77, 214, 162, 143, 102, 151, 173, 67, 229, 205, 32, 28, 71, 56, 232, 79, 166, 115, 93, 248, 122, 220, 146, 113, 125, 79, 47, 50, 194, 251, 72, 169, 199, 116, 121, 55, 193, 223, 136, 83, 88, 53, 190, 182, 27, 109, 204, 23, 240, 223, 134, 94, 54, 237, 42, 120, 246, 27, 113, 248, 87, 244, 35, 224, 239, 16, 71, 227, 31, 7, 233, 122, 172, 44, 178, 71, 169, 89, 197, 116, 140, 167, 130, 29, 3, 127, 90, 254, 110, 190, 31, 221, 125, 139, 195, 237, 107, 38, 86, 72, 165, 123, 121, 51, 198, 8, 102, 31, 251, 48, 175, 209, 191, 217, 183, 254, 10, 255, 0, 226, 63, 132, 159, 6, 60, 55, 160, 222, 120, 79, 75, 241, 13, 182, 151, 102, 150, 139, 57, 187, 146, 222, 224, 172, 127, 38, 9, 195, 46, 64, 3, 183, 165, 122, 184, 42, 202, 157, 105, 69, 245, 253, 15, 153, 205, 41, 57, 225, 225, 87, 170, 223, 230, 126, 152, 203, 242, 31, 165, 52, 201, 129, 92, 31, 236, 239, 251, 80, 248, 63, 246, 167, 240, 106, 234, 158, 24, 190, 97, 121, 12, 74, 247, 218, 101, 198, 18, 243, 79, 39, 179, 175, 241, 46, 120, 14, 185, 83, 236, 120, 174, 222, 108, 198, 120, 200, 254, 181, 237, 198, 73, 234, 143, 156, 98, 147, 207, 241, 26, 42, 19, 59, 103, 210, 138, 162, 46, 122, 175, 139, 63, 228, 96, 184, 250, 175, 254, 130, 43, 135, 248, 189, 241, 119, 195, 95, 3, 124, 17, 113, 226, 15, 21, 234, 246, 186, 54, 149, 110, 118, 249, 146, 242, 243, 191, 104, 227, 65, 243, 72, 231, 178, 168, 39, 232, 57, 172, 207, 219, 55, 246, 164, 240, 255, 0, 236, 161, 225, 153, 188, 65, 174, 67, 121, 125, 37, 220, 226, 210, 194, 198, 215, 2, 91, 217, 188, 189, 216, 220, 120, 69, 10, 50, 204, 115, 129, 142, 9, 32, 87, 228, 15, 237, 61, 251, 73, 248, 179, 246, 166, 248, 133, 54, 189, 226, 41, 65, 142, 44, 165, 141, 140, 12, 77, 182, 155, 15, 100, 137, 79, 115, 252, 78, 121, 99, 146, 123, 1, 141, 74, 188, 186, 45, 193, 106, 116, 159, 240, 81, 111, 219, 135, 87, 253, 177, 117, 152, 44, 180, 165, 188, 208, 188, 23, 162, 187, 75, 99, 96, 207, 251, 219, 217, 127, 231, 226, 227, 111, 27, 177, 194, 160, 200, 65, 158, 73, 36, 215, 139, 218, 221, 174, 177, 225, 59, 137, 38, 231, 116, 99, 112, 63, 236, 200, 51, 250, 49, 168, 205, 161, 141, 14, 239, 153, 92, 100, 253, 15, 249, 253, 106, 29, 46, 29, 214, 58, 133, 190, 54, 224, 149, 233, 208, 56, 199, 244, 205, 124, 214, 112, 155, 138, 169, 213, 51, 236, 56, 94, 162, 85, 101, 71, 164, 151, 228, 96, 107, 190, 101, 151, 129, 227, 190, 141, 127, 125, 164, 184, 144, 145, 212, 121, 82, 115, 249, 174, 107, 236, 63, 217, 143, 254, 10, 61, 224, 143, 3, 124, 63, 134, 61, 82, 199, 94, 55, 150, 242, 180, 50, 8, 173, 18, 64, 78, 6, 113, 151, 28, 28, 130, 62, 181, 242, 223, 132, 160, 139, 82, 240, 222, 191, 103, 112, 55, 42, 219, 253, 168, 140, 12, 148, 101, 43, 47, 228, 119, 26, 230, 124, 19, 166, 173, 180, 18, 197, 58, 171, 48, 153, 21, 193, 228, 2, 35, 216, 72, 250, 236, 21, 193, 133, 141, 57, 202, 211, 239, 249, 158, 246, 99, 90, 189, 8, 115, 82, 237, 249, 104, 126, 129, 219, 255, 0, 193, 90, 188, 5, 160, 90, 204, 182, 254, 21, 241, 46, 165, 41, 201, 69, 45, 4, 42, 71, 96, 91, 123, 99, 242, 175, 150, 191, 106, 255, 0, 218, 123, 84, 253, 169, 172, 238, 45, 87, 70, 177, 240, 222, 134, 14, 244, 180, 133, 140, 175, 41, 29, 26, 73, 88, 13, 199, 217, 85, 87, 235, 92, 93, 150, 139, 16, 147, 112, 64, 152, 32, 225, 71, 74, 177, 54, 152, 165, 246, 253, 204, 169, 234, 115, 249, 215, 183, 28, 45, 40, 234, 145, 241, 245, 179, 124, 85, 85, 203, 41, 105, 229, 161, 243, 156, 58, 75, 218, 235, 51, 199, 39, 252, 182, 221, 147, 234, 201, 140, 254, 37, 112, 127, 3, 94, 181, 240, 244, 249, 190, 31, 154, 57, 119, 24, 225, 113, 42, 237, 254, 28, 240, 223, 168, 253, 107, 7, 226, 127, 134, 255, 0, 178, 245, 105, 110, 173, 209, 94, 66, 162, 225, 48, 62, 86, 117, 206, 84, 250, 101, 120, 252, 107, 184, 248, 87, 225, 207, 237, 20, 89, 45, 27, 116, 119, 214, 197, 162, 207, 82, 123, 3, 232, 114, 48, 71, 168, 106, 224, 196, 86, 246, 117, 84, 143, 115, 11, 134, 250, 198, 17, 193, 117, 87, 95, 215, 169, 165, 240, 143, 227, 94, 189, 240, 15, 226, 102, 151, 226, 143, 15, 93, 77, 111, 117, 165, 76, 31, 104, 111, 150, 104, 255, 0, 142, 39, 29, 209, 215, 32, 131, 235, 244, 175, 219, 77, 7, 196, 182, 190, 55, 240, 166, 151, 173, 88, 159, 244, 61, 102, 202, 27, 232, 57, 232, 146, 32, 112, 63, 12, 226, 191, 10, 252, 72, 191, 102, 158, 68, 101, 195, 55, 35, 223, 119, 191, 168, 175, 215, 143, 248, 39, 167, 141, 255, 0, 225, 59, 253, 138, 124, 9, 113, 230, 121, 146, 105, 246, 143, 166, 74, 79, 80, 96, 145, 144, 127, 227, 161, 107, 233, 48, 242, 190, 199, 197, 202, 54, 118, 61, 121, 228, 27, 186, 154, 42, 34, 220, 209, 93, 70, 54, 103, 200, 255, 0, 240, 93, 207, 30, 203, 39, 198, 63, 7, 120, 111, 102, 45, 236, 116, 233, 181, 54, 126, 238, 242, 186, 196, 0, 246, 2, 31, 214, 190, 33, 136, 109, 69, 96, 74, 247, 24, 236, 13, 20, 87, 159, 95, 226, 102, 244, 202, 154, 145, 91, 38, 82, 171, 149, 254, 37, 63, 92, 100, 123, 243, 89, 90, 64, 55, 30, 32, 184, 141, 184, 73, 34, 24, 81, 209, 113, 184, 143, 240, 162, 138, 242, 51, 69, 254, 205, 35, 223, 225, 223, 247, 248, 124, 255, 0, 33, 158, 6, 148, 90, 248, 196, 219, 55, 204, 47, 33, 154, 213, 142, 58, 171, 41, 110, 127, 51, 92, 189, 174, 171, 246, 43, 197, 249, 127, 229, 148, 110, 71, 171, 7, 10, 79, 254, 60, 104, 162, 188, 12, 43, 126, 219, 228, 143, 181, 204, 210, 246, 22, 243, 127, 145, 223, 90, 55, 155, 14, 121, 24, 229, 142, 121, 52, 161, 188, 153, 25, 79, 205, 242, 228, 228, 231, 57, 162, 138, 250, 213, 177, 249, 139, 220, 229, 254, 34, 88, 11, 237, 16, 72, 2, 169, 133, 139, 169, 198, 15, 184, 252, 106, 15, 129, 158, 37, 109, 49, 254, 195, 32, 103, 142, 71, 118, 133, 148, 243, 19, 175, 83, 244, 35, 245, 30, 230, 138, 43, 194, 205, 186, 159, 107, 195, 18, 110, 154, 245, 127, 161, 173, 241, 175, 70, 22, 26, 197, 141, 236, 59, 82, 59, 243, 38, 228, 3, 24, 148, 96, 147, 244, 59, 179, 245, 205, 126, 132, 255, 0, 193, 24, 124, 77, 38, 171, 251, 49, 120, 143, 76, 147, 118, 221, 31, 196, 13, 229, 147, 211, 18, 193, 27, 17, 255, 0, 125, 41, 63, 141, 20, 87, 189, 146, 201, 203, 13, 7, 46, 199, 204, 231, 212, 227, 12, 125, 72, 193, 89, 95, 244, 62, 177, 162, 138, 43, 216, 60, 51, 255, 217 },
                            Telefon = "062548895",
                            Tezina = 60m,
                            Visina = 170m
                        },
                        new
                        {
                            Id = 9,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user.user@gmail.com",
                            Ime = "User",
                            KorisnickoIme = "User",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "User",
                            Telefon = "063456734",
                            Tezina = 90m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 10,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amna.kazicim@gmail.com",
                            Ime = "Amna",
                            KorisnickoIme = "Amina",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Kazimic",
                            Telefon = "062545896",
                            Tezina = 60m,
                            Visina = 170m
                        },
                        new
                        {
                            Id = 11,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "enes.omanovic@gmail.com",
                            Ime = "Enes",
                            KorisnickoIme = "Enes",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Omanovic",
                            Telefon = "063456734",
                            Tezina = 80m,
                            Visina = 180m
                        },
                        new
                        {
                            Id = 12,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.maric@gmail.com",
                            Ime = "Sara",
                            KorisnickoIme = "Sara",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Maric",
                            Telefon = "062545896",
                            Tezina = 50m,
                            Visina = 160m
                        },
                        new
                        {
                            Id = 13,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hana.maric@gmail.com",
                            Ime = "Hana",
                            KorisnickoIme = "Hana",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Maric",
                            Telefon = "063456734",
                            Tezina = 52m,
                            Visina = 170m
                        },
                        new
                        {
                            Id = 14,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nejra.maric@gmail.com",
                            Ime = "Nejra",
                            KorisnickoIme = "Nejra",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Maric",
                            Telefon = "062545896",
                            Tezina = 50m,
                            Visina = 160m
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Napredak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumMjerenja")
                        .HasColumnType("date");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<decimal?>("Tezina")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Visina")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Napredak__3214EC2721435085");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Napredak", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumMjerenja = new DateTime(2023, 12, 12, 13, 20, 20, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Tezina = 90m
                        },
                        new
                        {
                            Id = 2,
                            DatumMjerenja = new DateTime(2023, 12, 12, 13, 20, 30, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Tezina = 86m
                        },
                        new
                        {
                            Id = 3,
                            DatumMjerenja = new DateTime(2023, 12, 12, 13, 20, 40, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Tezina = 76m
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Novosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutorId")
                        .HasColumnType("int")
                        .HasColumnName("AutorID");

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("datetime");

                    b.Property<string>("Naslov")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tekst")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK__Novosti__3214EC2703EB8099");

                    b.HasIndex("AutorId");

                    b.ToTable("Novosti", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            DatumObjave = new DateTime(2023, 10, 25, 17, 55, 40, 0, DateTimeKind.Unspecified),
                            Naslov = "Obavještenje za sve aktivne clanove centra!!!",
                            Tekst = "Obavještavaju se svi clanovi fitness centra da centar nece raditi 26.10.2023 godine. Buduci da renoviramo fitness centar neophodno je bilo da zatvorimo centar na jedan dan kako bi realizacija renoviranja bila moguca.Svi koji propuste svoje termine moci ce ih nadoknaditi u terminima narednih dana. Hvala na razumijevanju."
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 1,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "Novi zdravi recept!",
                            Tekst = "Pozdrav svim clanovima našeg centra. Danas sam isprobala jedan zdravi i brzi recept te sam odlucila da ga podjelim i sa vama. Radi se o salati od tune, ja sam koristila dodatno zelenu salatu, krastavce, kukuruz i mrkvu. Obrok je bio proteinski obogacen niskokalorican ali ipak dovoljno zasitan. Javite mi vaše utiske."
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "DaniSporta",
                            Tekst = "Obavještavamo vas da ce se 10.12.2023 u našem centru održati dani sporta. Centar ce tog dana moci posjetiti svi clanovi fitnes centra besplatno. Takoder bice pice dobrodošlice, vrijeme cemo provoditi vježbajuci. Radujemo se da vas vidimo u velikom broju."
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 3,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "Slobodan dan ",
                            Tekst = "Obavještavamo sve korisnike centra da centar nece raditi 1.1.2024,2.1.2024 i 3.1.2024. Razlog zatvaranja centra su novogodišnji praznici.Zahvaljujemo se na razumjevanju"
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 2,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "Zadravi doručak:Ovsena kaša",
                            Tekst = "Oduševljavamo vas najnovijim receptom za zdravu ovsenu kasu- Nova Ovsena Kaša! Sada možete započeti svoj dan zdravim doručkom koji će vam pružiti potrebnu energiju za uspješan trening.Ovsena kaša obogaćena je nutritivnim sastojcima, voćem i orašastim plodovima.Isprobajte ovu ukusnu i hranjivu opciju za doručak!"
                        },
                        new
                        {
                            Id = 6,
                            AutorId = 1,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "Dan žena",
                            Tekst = "Molimo sve članice našeg fitness centra da sa puta pokupe svoje poklone za dan žena ukoiko to već nisu uradile."
                        },
                        new
                        {
                            Id = 7,
                            AutorId = 3,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "Otkazan kružni trening",
                            Tekst = "Obavještavamo sve korisnike centra da se trener razbolio, te se kružni treninzi danas neće održati.Hvala na razumjevanju"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.OdgovoriNaKomentare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumOdgovora")
                        .HasColumnType("datetime");

                    b.Property<int?>("KomentarId")
                        .HasColumnType("int")
                        .HasColumnName("KomentarID");

                    b.Property<string>("Tekst")
                        .HasColumnType("text");

                    b.Property<int?>("TrenerId")
                        .HasColumnType("int")
                        .HasColumnName("TrenerID");

                    b.HasKey("Id")
                        .HasName("PK__Odgovori__3214EC273D7F3F3D");

                    b.HasIndex("KomentarId");

                    b.HasIndex("TrenerId");

                    b.ToTable("OdgovoriNaKomentare", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumOdgovora = new DateTime(2023, 12, 12, 13, 20, 10, 0, DateTimeKind.Unspecified),
                            KomentarId = 1,
                            Tekst = "Drago nam je to čuti",
                            TrenerId = 1
                        },
                        new
                        {
                            Id = 2,
                            DatumOdgovora = new DateTime(2023, 12, 12, 13, 20, 20, 0, DateTimeKind.Unspecified),
                            KomentarId = 2,
                            Tekst = "Drago nam je to čuti",
                            TrenerId = 1
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Placanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumPlacanja")
                        .HasColumnType("date");

                    b.Property<decimal?>("Iznos")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("TxnId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Placanja__3214EC27E0E744DB");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Placanja", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumPlacanja = new DateTime(2024, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Iznos = 15m,
                            KorisnikId = 8,
                            TxnId = "test010920001"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.PregledaneNovosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("NovostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NovostId");

                    b.ToTable("PregledaneNovostis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KorisnikId = 8,
                            NovostId = 1
                        },
                        new
                        {
                            Id = 2,
                            KorisnikId = 4,
                            NovostId = 2
                        },
                        new
                        {
                            Id = 3,
                            KorisnikId = 4,
                            NovostId = 1
                        },
                        new
                        {
                            Id = 4,
                            KorisnikId = 5,
                            NovostId = 1
                        },
                        new
                        {
                            Id = 5,
                            KorisnikId = 5,
                            NovostId = 3
                        },
                        new
                        {
                            Id = 6,
                            KorisnikId = 5,
                            NovostId = 4
                        },
                        new
                        {
                            Id = 7,
                            KorisnikId = 8,
                            NovostId = 3
                        },
                        new
                        {
                            Id = 8,
                            KorisnikId = 7,
                            NovostId = 1
                        },
                        new
                        {
                            Id = 9,
                            KorisnikId = 6,
                            NovostId = 5
                        },
                        new
                        {
                            Id = 10,
                            KorisnikId = 6,
                            NovostId = 6
                        },
                        new
                        {
                            Id = 11,
                            KorisnikId = 8,
                            NovostId = 6
                        },
                        new
                        {
                            Id = 12,
                            KorisnikId = 7,
                            NovostId = 6
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Raspored", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AktivnostId")
                        .HasColumnType("int")
                        .HasColumnName("AktivnostID");

                    b.Property<int>("Dan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumPocetka")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime");

                    b.Property<int?>("TrenerId")
                        .HasColumnType("int")
                        .HasColumnName("TrenerID");

                    b.Property<int?>("TreningId")
                        .HasColumnType("int")
                        .HasColumnName("TreningID");

                    b.HasKey("Id")
                        .HasName("PK__Raspored__3214EC2788CB231D");

                    b.HasIndex("AktivnostId");

                    b.HasIndex("TrenerId");

                    b.HasIndex("TreningId");

                    b.ToTable("Raspored", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 2,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 3,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 4,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 5,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 6,
                            AktivnostId = 6,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 7,
                            AktivnostId = 6,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 8,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 9,
                            AktivnostId = 6,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 10,
                            AktivnostId = 6,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 11,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 12,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 13,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 14,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 15,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 16,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 17,
                            AktivnostId = 7,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 18,
                            AktivnostId = 6,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 19,
                            AktivnostId = 7,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 20,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 21,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 22,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 23,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 24,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 25,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 26,
                            AktivnostId = 4,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 27,
                            AktivnostId = 4,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 28,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 29,
                            AktivnostId = 4,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 30,
                            AktivnostId = 4,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 31,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 32,
                            AktivnostId = 7,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 33,
                            AktivnostId = 7,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 34,
                            AktivnostId = 7,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 35,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 36,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 37,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 38,
                            AktivnostId = 7,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 39,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 40,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 41,
                            AktivnostId = 4,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 42,
                            AktivnostId = 4,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 43,
                            AktivnostId = 4,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 44,
                            AktivnostId = 4,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 45,
                            AktivnostId = 4,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 46,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 47,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 48,
                            AktivnostId = 6,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 49,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 50,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 51,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 52,
                            AktivnostId = 7,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 53,
                            AktivnostId = 7,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 54,
                            AktivnostId = 7,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 55,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Recommender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoNovostId1")
                        .HasColumnType("int");

                    b.Property<int>("CoNovostId2")
                        .HasColumnType("int");

                    b.Property<int>("CoNovostId3")
                        .HasColumnType("int");

                    b.Property<int>("NovostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recommender");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Rezervacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumRezervacija")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("PlacanjeId")
                        .HasColumnType("int");

                    b.Property<int?>("RasporedId")
                        .HasColumnType("int")
                        .HasColumnName("RasporedID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Rezervac__3214EC2773F50FE4");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PlacanjeId");

                    b.HasIndex("RasporedId");

                    b.ToTable("Rezervacije", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumRezervacija = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            RasporedId = 1,
                            Status = "Aktivna"
                        },
                        new
                        {
                            Id = 2,
                            DatumRezervacija = new DateTime(2024, 1, 19, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 8,
                            PlacanjeId = 1,
                            RasporedId = 20,
                            Status = "Aktivna"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treneri", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Specijalnost")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Treneri__3214EC272DC32C04");

                    b.ToTable("Treneri", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Specijalnost = "Personalni trener"
                        },
                        new
                        {
                            Id = 2,
                            Specijalnost = "Magistrirani Personalni trener"
                        },
                        new
                        {
                            Id = 3,
                            Specijalnost = "Stručni trener"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treningi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<int?>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Treningi__3214EC271B3ECC22");

                    b.ToTable("Treningi", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "Kružni",
                            Opis = "Kružni trening je visoko intenzivan oblik vježbanja koji ukljucuje brze serije razlicitih vježbi s minimalnim odmorom izmedu njih. Cilj mu je poboljšati snagu, izdržljivost i kondiciju, poticuci sagorijevanje kalorija i oblikovanje tijela. Ovaj dinamican trening prilagodava se razlicitim razinama iskustva i fitnessa.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "Back health",
                            Opis = "Back Health trening je usmjeren na ocuvanje i jacanje zdravlja leda. Ova vrsta vježbanja ukljucuje niz vježbi koje su posebno dizajnirane za potporu kralježnici i mišicima leda. Cilj mu je smanjiti bol u ledima, poboljšati držanje i potaknuti mišice leda, što može dovesti do boljeg opceg zdravlja leda i smanjenja rizika od ozljeda. Back Health trening može biti prilagoden razlicitim razinama iskustva i potreba pojedinca.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 3,
                            Naziv = "Pilates",
                            Opis = "Pilates je sistem vježbi koji se usredotocuje na jacanje mišica trupa, poboljšanje držanja i fleksibilnosti te poticanje svijesti o tijelu. Ovaj holisticki pristup vježbanju promovira centar tijela kao kljucnu tocku stabilnosti i ravnoteže. Cilj Pilates treninga je razviti snažne i gibljive mišice, smanjiti napetost i bol u ledima te unaprijediti ukupno tjelesno zdravlje. Pilates se može prilagoditi razlicitim razinama iskustva, cineci ga pristupacnim za sve, bez obzira na dob i kondiciju.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 4,
                            Naziv = "Barbell lift",
                            Opis = "Trening dizanja tegova sa šipkom je izuzetno ucinkovita metoda za izgradnju snage i mišica. Ova vrsta vježbanja ukljucuje upotrebu šipke s tegovima i razlicitim tehnikama za dizanje, ukljucujuci cucnjeve, bench press, deadlifts i mnoge druge. Glavni cilj ovog treninga je povecati snagu i mišicnu masu, a takoder poboljšati tijelo i postici bolje sportske performanse. Dizanje utega s šipkom zahtijeva pravilnu tehniku i postupno povecavanje opterecenja. Ovaj trening se može prilagoditi razlicitim razinama iskustva i ciljevima vježbaca.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 5,
                            Naziv = "Booty workout",
                            Opis = "Fokusira se na ciljanu izgradnju i toniranje mišica donjeg dijela tijela kako bi se postigao oblik i velicina koji vam odgovara. Ovaj trening ukljucuje vježbe poput cucnjeva, iskoraka, potisaka s nogama i razlicitih vježbi s težinama ili elasticnim trakama kako bi se postigao optimalan rezultat. Cilj mu je ne samo poboljšati izgled vec i poboljšati funkcionalnost  mišica, pomažuci u svakodnevnim aktivnostima. Booty workout može biti prilagoden razlicitim razinama iskustva i fitnessa, te može ukljucivati i kardio elemente kako bi se dodatno sagorijevale kalorije.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 6,
                            Naziv = "ABS & Core",
                            Opis = "Trening za trbušne mišice i jezgru je usmjeren na jacanje mišica trbuha, donjeg dijela leda i struka kako bi se poboljšala snaga, stabilnost i ravnoteža tijela. Ovaj trening obicno ukljucuje vježbe poput trbušnjaka, plankova, leg-raise-ova i razlicitih vježbi s pilates loptom ili stabilnom površinom. Cilj mu je ne samo postici cvršce i izraženije trbušne mišice vec i poboljšati stabilnost tijela, smanjiti rizik od ozljeda i podržati držanje. Trening za trbušne mišice i jezgru se može prilagoditi razlicitim razinama iskustva i fitnessa, a takoder može ukljucivati vježbe za cijeli jezgru kako bi se postigao sveobuhvatan rezultat.",
                            Trajanje = 60
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Komentari", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Komentaris")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Komentari__Koris__7A672E12");

                    b.HasOne("FitnessCentar.Services.Database.Novosti", "Novost")
                        .WithMany("Komentaris")
                        .HasForeignKey("NovostId")
                        .HasConstraintName("FK__Komentari__Novos__797309D9");

                    b.Navigation("Korisnik");

                    b.Navigation("Novost");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Napredak", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Napredaks")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Napredak__Visina__6FE99F9F");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Novosti", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Treneri", "Autor")
                        .WithMany("Novostis")
                        .HasForeignKey("AutorId")
                        .HasConstraintName("FK__Novosti__AutorID__72C60C4A");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.OdgovoriNaKomentare", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Komentari", "Komentar")
                        .WithMany("OdgovoriNaKomentares")
                        .HasForeignKey("KomentarId")
                        .HasConstraintName("FK__OdgovoriN__Komen__7D439ABD");

                    b.HasOne("FitnessCentar.Services.Database.Treneri", "Trener")
                        .WithMany("OdgovoriNaKomentares")
                        .HasForeignKey("TrenerId")
                        .HasConstraintName("FK__OdgovoriN__Trene__7E37BEF6");

                    b.Navigation("Komentar");

                    b.Navigation("Trener");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Placanja", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Placanjas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Placanja__Korisn__6D0D32F4");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.PregledaneNovosti", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("PregledaneNovosti")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessCentar.Services.Database.Novosti", "Novost")
                        .WithMany()
                        .HasForeignKey("NovostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Novost");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Raspored", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Aktivnosti", "Aktivnost")
                        .WithMany("Rasporeds")
                        .HasForeignKey("AktivnostId")
                        .HasConstraintName("FK__Raspored__Aktivn__66603565");

                    b.HasOne("FitnessCentar.Services.Database.Treneri", "Trener")
                        .WithMany("Rasporeds")
                        .HasForeignKey("TrenerId")
                        .HasConstraintName("FK__Raspored__Trener__656C112C");

                    b.HasOne("FitnessCentar.Services.Database.Treningi", "Trening")
                        .WithMany("Rasporeds")
                        .HasForeignKey("TreningId")
                        .HasConstraintName("FK__Raspored__Trenin__6477ECF3");

                    b.Navigation("Aktivnost");

                    b.Navigation("Trener");

                    b.Navigation("Trening");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Rezervacije", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Rezervaci__Koris__693CA210");

                    b.HasOne("FitnessCentar.Services.Database.Placanja", "Placanje")
                        .WithMany()
                        .HasForeignKey("PlacanjeId");

                    b.HasOne("FitnessCentar.Services.Database.Raspored", "Raspored")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("RasporedId")
                        .HasConstraintName("FK__Rezervaci__Raspo__6A30C649");

                    b.Navigation("Korisnik");

                    b.Navigation("Placanje");

                    b.Navigation("Raspored");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treneri", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithOne("Trener")
                        .HasForeignKey("FitnessCentar.Services.Database.Treneri", "Id")
                        .IsRequired()
                        .HasConstraintName("FK__Treneri__Korisni__01142BA1");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Aktivnosti", b =>
                {
                    b.Navigation("Rasporeds");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Komentari", b =>
                {
                    b.Navigation("OdgovoriNaKomentares");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Korisnici", b =>
                {
                    b.Navigation("Komentaris");

                    b.Navigation("Napredaks");

                    b.Navigation("Placanjas");

                    b.Navigation("PregledaneNovosti");

                    b.Navigation("Rezervacijes");

                    b.Navigation("Trener")
                        .IsRequired();
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Novosti", b =>
                {
                    b.Navigation("Komentaris");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Raspored", b =>
                {
                    b.Navigation("Rezervacijes");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treneri", b =>
                {
                    b.Navigation("Novostis");

                    b.Navigation("OdgovoriNaKomentares");

                    b.Navigation("Rasporeds");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treningi", b =>
                {
                    b.Navigation("Rasporeds");
                });
#pragma warning restore 612, 618
        }
    }
}
