// <auto-generated />
using System;
using FitnessCentar.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessCentar.Services.Migrations
{
    [DbContext(typeof(Ib200005rs2Context))]
    partial class Ib200005rs2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessCentar.Services.Database.Aktivnosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Aktivnos__3214EC27655B8984");

                    b.ToTable("Aktivnosti", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Naziv = "Veoma intezivno"
                        },
                        new
                        {
                            Id = 5,
                            Naziv = "Intezivno"
                        },
                        new
                        {
                            Id = 6,
                            Naziv = "Umjereno"
                        },
                        new
                        {
                            Id = 7,
                            Naziv = "Lagan tempo"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Komentari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumKomentara")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("NovostId")
                        .HasColumnType("int")
                        .HasColumnName("NovostID");

                    b.Property<string>("Tekst")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK__Komentar__3214EC274354741D");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NovostId");

                    b.ToTable("Komentari", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumKomentara = new DateTime(2023, 12, 12, 10, 55, 40, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            NovostId = 1,
                            Tekst = "Nema problema, nadoknaditi cemo termine"
                        },
                        new
                        {
                            Id = 2,
                            DatumKomentara = new DateTime(2023, 12, 12, 13, 20, 10, 0, DateTimeKind.Unspecified),
                            KorisnikId = 5,
                            NovostId = 2,
                            Tekst = "Recept je odličan"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Korisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumRegistracije")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varbinary(255)");

                    b.Property<byte[]>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varbinary(255)");

                    b.Property<string>("Pol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Tezina")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Visina")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Korisnic__3214EC2736DB7549");

                    b.ToTable("Korisnici", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "selma.kovacevic@gmail.com",
                            Ime = "Selma",
                            KorisnickoIme = "Selma",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Kovacevic",
                            Telefon = "061123123",
                            Tezina = 60m,
                            Visina = 165m
                        },
                        new
                        {
                            Id = 2,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vildana.suta@gmail.com",
                            Ime = "Vildana",
                            KorisnickoIme = "Vildana",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Šuta",
                            Telefon = "061123123",
                            Tezina = 60m,
                            Visina = 165m
                        },
                        new
                        {
                            Id = 3,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "husein.maric@gmail.com",
                            Ime = "Husein",
                            KorisnickoIme = "Huso",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Maric",
                            Telefon = "062545896",
                            Tezina = 90m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 4,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "benjamin.omanovic@gmail.com",
                            Ime = "Benjamin",
                            KorisnickoIme = "Benjo",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Omanovic",
                            Telefon = "062545698",
                            Tezina = 88m,
                            Visina = 192m
                        },
                        new
                        {
                            Id = 5,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(1977, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sanela.omanovic@gmail.com",
                            Ime = "Sanela",
                            KorisnickoIme = "Sanela",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Omanovic",
                            Telefon = "062548521",
                            Tezina = 70m,
                            Visina = 175m
                        },
                        new
                        {
                            Id = 6,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bakir.leto@gmail.com",
                            Ime = "Bakir",
                            KorisnickoIme = "Bakir",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Leto",
                            Telefon = "061254569",
                            Tezina = 88m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 7,
                            DatumRegistracije = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(1996, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "faruk.tinjak@gmail.com",
                            Ime = "Faruk",
                            KorisnickoIme = "Faruk",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Muški",
                            Prezime = "Tinjak",
                            Telefon = "062548865",
                            Tezina = 88m,
                            Visina = 190m
                        },
                        new
                        {
                            Id = 8,
                            DatumRegistracije = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodjenja = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ena.omanovic@gamil.com",
                            Ime = "Ena",
                            KorisnickoIme = "Ena",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Pol = "Ženski",
                            Prezime = "Omanovic",
                            Telefon = "062548895",
                            Tezina = 60m,
                            Visina = 170m
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Napredak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumMjerenja")
                        .HasColumnType("date");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<decimal?>("Tezina")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Visina")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Napredak__3214EC2721435085");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Napredak", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumMjerenja = new DateTime(2023, 12, 12, 13, 20, 20, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Tezina = 90m
                        },
                        new
                        {
                            Id = 2,
                            DatumMjerenja = new DateTime(2023, 12, 12, 13, 20, 30, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Tezina = 86m
                        },
                        new
                        {
                            Id = 3,
                            DatumMjerenja = new DateTime(2023, 12, 12, 13, 20, 40, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Tezina = 76m
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Novosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutorId")
                        .HasColumnType("int")
                        .HasColumnName("AutorID");

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("datetime");

                    b.Property<string>("Naslov")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tekst")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK__Novosti__3214EC2703EB8099");

                    b.HasIndex("AutorId");

                    b.ToTable("Novosti", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            DatumObjave = new DateTime(2023, 10, 25, 17, 55, 40, 0, DateTimeKind.Unspecified),
                            Naslov = "Obavještenje za sve aktivne clanove centra!!!",
                            Tekst = "Obavještavaju se svi clanovi fitness centra da centar nece raditi 26.10.2023 godine. Buduci da renoviramo fitness centar neophodno je bilo da zatvorimo centar na jedan dan kako bi realizacija renoviranja bila moguca.Svi koji propuste svoje termine moci ce ih nadoknaditi u terminima narednih dana. Hvala na razumijevanju."
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 1,
                            DatumObjave = new DateTime(2023, 10, 26, 18, 22, 34, 0, DateTimeKind.Unspecified),
                            Naslov = "Novi zdravi recept!",
                            Tekst = "Pozdrav svim clanovima našeg centra. Danas sam isprobala jedan zdravi i brzi recept te sam odlucila da ga podjelim i sa vama. Radi se o salati od tune, ja sam koristila dodatno zelenu salatu, krastavce, kukuruz i mrkvu. Obrok je bio proteinski obogacen niskokalorican ali ipak dovoljno zasitan. Javite mi vaše utiske."
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.OdgovoriNaKomentare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumOdgovora")
                        .HasColumnType("datetime");

                    b.Property<int?>("KomentarId")
                        .HasColumnType("int")
                        .HasColumnName("KomentarID");

                    b.Property<string>("Tekst")
                        .HasColumnType("text");

                    b.Property<int?>("TrenerId")
                        .HasColumnType("int")
                        .HasColumnName("TrenerID");

                    b.HasKey("Id")
                        .HasName("PK__Odgovori__3214EC273D7F3F3D");

                    b.HasIndex("KomentarId");

                    b.HasIndex("TrenerId");

                    b.ToTable("OdgovoriNaKomentare", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumOdgovora = new DateTime(2023, 12, 12, 13, 20, 10, 0, DateTimeKind.Unspecified),
                            KomentarId = 1,
                            Tekst = "Drago nam je to čuti",
                            TrenerId = 1
                        },
                        new
                        {
                            Id = 2,
                            DatumOdgovora = new DateTime(2023, 12, 12, 13, 20, 20, 0, DateTimeKind.Unspecified),
                            KomentarId = 2,
                            Tekst = "Drago nam je to čuti",
                            TrenerId = 1
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Placanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumPlacanja")
                        .HasColumnType("date");

                    b.Property<decimal?>("Iznos")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("TxnId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Placanja__3214EC27E0E744DB");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Placanja", (string)null);
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Raspored", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AktivnostId")
                        .HasColumnType("int")
                        .HasColumnName("AktivnostID");

                    b.Property<int>("Dan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumPocetka")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime");

                    b.Property<int?>("TrenerId")
                        .HasColumnType("int")
                        .HasColumnName("TrenerID");

                    b.Property<int?>("TreningId")
                        .HasColumnType("int")
                        .HasColumnName("TreningID");

                    b.HasKey("Id")
                        .HasName("PK__Raspored__3214EC2788CB231D");

                    b.HasIndex("AktivnostId");

                    b.HasIndex("TrenerId");

                    b.HasIndex("TreningId");

                    b.ToTable("Raspored", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 2,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 3,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 4,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 5,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 6,
                            AktivnostId = 6,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 7,
                            AktivnostId = 6,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 8,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 9,
                            AktivnostId = 6,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 10,
                            AktivnostId = 6,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 11,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 12,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 13,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 14,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 15,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 16,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 17,
                            AktivnostId = 7,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 18,
                            AktivnostId = 6,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 19,
                            AktivnostId = 7,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 20,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 21,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 22,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 23,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 24,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 25,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 26,
                            AktivnostId = 4,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 27,
                            AktivnostId = 4,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 28,
                            AktivnostId = 5,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 29,
                            AktivnostId = 4,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 30,
                            AktivnostId = 4,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 31,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 32,
                            AktivnostId = 7,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 33,
                            AktivnostId = 7,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 34,
                            AktivnostId = 7,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 35,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 36,
                            AktivnostId = 5,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 37,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 38,
                            AktivnostId = 7,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 39,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 40,
                            AktivnostId = 5,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 1
                        },
                        new
                        {
                            Id = 41,
                            AktivnostId = 4,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 42,
                            AktivnostId = 4,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 43,
                            AktivnostId = 4,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 44,
                            AktivnostId = 4,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 45,
                            AktivnostId = 4,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 4
                        },
                        new
                        {
                            Id = 46,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 47,
                            AktivnostId = 5,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 48,
                            AktivnostId = 6,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 2
                        },
                        new
                        {
                            Id = 49,
                            AktivnostId = 5,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 5
                        },
                        new
                        {
                            Id = 50,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 6
                        },
                        new
                        {
                            Id = 51,
                            AktivnostId = 7,
                            Dan = 1,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 52,
                            AktivnostId = 7,
                            Dan = 2,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 53,
                            AktivnostId = 7,
                            Dan = 3,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 54,
                            AktivnostId = 7,
                            Dan = 4,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        },
                        new
                        {
                            Id = 55,
                            AktivnostId = 7,
                            Dan = 5,
                            DatumPocetka = new DateTime(2023, 10, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavrsetka = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Rezervacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumRezervacija")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("PlacanjeId")
                        .HasColumnType("int");

                    b.Property<int?>("RasporedId")
                        .HasColumnType("int")
                        .HasColumnName("RasporedID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Rezervac__3214EC2773F50FE4");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PlacanjeId");

                    b.HasIndex("RasporedId");

                    b.ToTable("Rezervacije", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumRezervacija = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            RasporedId = 1,
                            Status = "Aktivna"
                        },
                        new
                        {
                            Id = 2,
                            DatumRezervacija = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            RasporedId = 4,
                            Status = "Neaktivna"
                        },
                        new
                        {
                            Id = 3,
                            DatumRezervacija = new DateTime(2023, 10, 27, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            RasporedId = 20,
                            Status = "Aktivna"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treneri", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Specijalnost")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Treneri__3214EC272DC32C04");

                    b.ToTable("Treneri", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Specijalnost = "Personalni trener"
                        },
                        new
                        {
                            Id = 2,
                            Specijalnost = "Magistrirani Personalni trener"
                        },
                        new
                        {
                            Id = 3,
                            Specijalnost = "Stručni trener"
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treningi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<int?>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Treningi__3214EC271B3ECC22");

                    b.ToTable("Treningi", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "Kružni",
                            Opis = "Kružni trening je visoko intenzivan oblik vježbanja koji ukljucuje brze serije razlicitih vježbi s minimalnim odmorom izmedu njih. Cilj mu je poboljšati snagu, izdržljivost i kondiciju, poticuci sagorijevanje kalorija i oblikovanje tijela. Ovaj dinamican trening prilagodava se razlicitim razinama iskustva i fitnessa.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "Back health",
                            Opis = "Back Health trening je usmjeren na ocuvanje i jacanje zdravlja leda. Ova vrsta vježbanja ukljucuje niz vježbi koje su posebno dizajnirane za potporu kralježnici i mišicima leda. Cilj mu je smanjiti bol u ledima, poboljšati držanje i potaknuti mišice leda, što može dovesti do boljeg opceg zdravlja leda i smanjenja rizika od ozljeda. Back Health trening može biti prilagoden razlicitim razinama iskustva i potreba pojedinca.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 3,
                            Naziv = "Pilates",
                            Opis = "Pilates je sistem vježbi koji se usredotocuje na jacanje mišica trupa, poboljšanje držanja i fleksibilnosti te poticanje svijesti o tijelu. Ovaj holisticki pristup vježbanju promovira centar tijela kao kljucnu tocku stabilnosti i ravnoteže. Cilj Pilates treninga je razviti snažne i gibljive mišice, smanjiti napetost i bol u ledima te unaprijediti ukupno tjelesno zdravlje. Pilates se može prilagoditi razlicitim razinama iskustva, cineci ga pristupacnim za sve, bez obzira na dob i kondiciju.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 4,
                            Naziv = "Barbell lift",
                            Opis = "Trening dizanja tegova sa šipkom je izuzetno ucinkovita metoda za izgradnju snage i mišica. Ova vrsta vježbanja ukljucuje upotrebu šipke s tegovima i razlicitim tehnikama za dizanje, ukljucujuci cucnjeve, bench press, deadlifts i mnoge druge. Glavni cilj ovog treninga je povecati snagu i mišicnu masu, a takoder poboljšati tijelo i postici bolje sportske performanse. Dizanje utega s šipkom zahtijeva pravilnu tehniku i postupno povecavanje opterecenja. Ovaj trening se može prilagoditi razlicitim razinama iskustva i ciljevima vježbaca.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 5,
                            Naziv = "Booty workout",
                            Opis = "Fokusira se na ciljanu izgradnju i toniranje mišica donjeg dijela tijela kako bi se postigao oblik i velicina koji vam odgovara. Ovaj trening ukljucuje vježbe poput cucnjeva, iskoraka, potisaka s nogama i razlicitih vježbi s težinama ili elasticnim trakama kako bi se postigao optimalan rezultat. Cilj mu je ne samo poboljšati izgled vec i poboljšati funkcionalnost  mišica, pomažuci u svakodnevnim aktivnostima. Booty workout može biti prilagoden razlicitim razinama iskustva i fitnessa, te može ukljucivati i kardio elemente kako bi se dodatno sagorijevale kalorije.",
                            Trajanje = 60
                        },
                        new
                        {
                            Id = 6,
                            Naziv = "ABS & Core",
                            Opis = "Trening za trbušne mišice i jezgru je usmjeren na jacanje mišica trbuha, donjeg dijela leda i struka kako bi se poboljšala snaga, stabilnost i ravnoteža tijela. Ovaj trening obicno ukljucuje vježbe poput trbušnjaka, plankova, leg-raise-ova i razlicitih vježbi s pilates loptom ili stabilnom površinom. Cilj mu je ne samo postici cvršce i izraženije trbušne mišice vec i poboljšati stabilnost tijela, smanjiti rizik od ozljeda i podržati držanje. Trening za trbušne mišice i jezgru se može prilagoditi razlicitim razinama iskustva i fitnessa, a takoder može ukljucivati vježbe za cijeli jezgru kako bi se postigao sveobuhvatan rezultat.",
                            Trajanje = 60
                        });
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Komentari", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Komentaris")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Komentari__Koris__7A672E12");

                    b.HasOne("FitnessCentar.Services.Database.Novosti", "Novost")
                        .WithMany("Komentaris")
                        .HasForeignKey("NovostId")
                        .HasConstraintName("FK__Komentari__Novos__797309D9");

                    b.Navigation("Korisnik");

                    b.Navigation("Novost");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Napredak", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Napredaks")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Napredak__Visina__6FE99F9F");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Novosti", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Treneri", "Autor")
                        .WithMany("Novostis")
                        .HasForeignKey("AutorId")
                        .HasConstraintName("FK__Novosti__AutorID__72C60C4A");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.OdgovoriNaKomentare", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Komentari", "Komentar")
                        .WithMany("OdgovoriNaKomentares")
                        .HasForeignKey("KomentarId")
                        .HasConstraintName("FK__OdgovoriN__Komen__7D439ABD");

                    b.HasOne("FitnessCentar.Services.Database.Treneri", "Trener")
                        .WithMany("OdgovoriNaKomentares")
                        .HasForeignKey("TrenerId")
                        .HasConstraintName("FK__OdgovoriN__Trene__7E37BEF6");

                    b.Navigation("Komentar");

                    b.Navigation("Trener");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Placanja", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Placanjas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Placanja__Korisn__6D0D32F4");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Raspored", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Aktivnosti", "Aktivnost")
                        .WithMany("Rasporeds")
                        .HasForeignKey("AktivnostId")
                        .HasConstraintName("FK__Raspored__Aktivn__66603565");

                    b.HasOne("FitnessCentar.Services.Database.Treneri", "Trener")
                        .WithMany("Rasporeds")
                        .HasForeignKey("TrenerId")
                        .HasConstraintName("FK__Raspored__Trener__656C112C");

                    b.HasOne("FitnessCentar.Services.Database.Treningi", "Trening")
                        .WithMany("Rasporeds")
                        .HasForeignKey("TreningId")
                        .HasConstraintName("FK__Raspored__Trenin__6477ECF3");

                    b.Navigation("Aktivnost");

                    b.Navigation("Trener");

                    b.Navigation("Trening");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Rezervacije", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Rezervaci__Koris__693CA210");

                    b.HasOne("FitnessCentar.Services.Database.Placanja", "Placanje")
                        .WithMany()
                        .HasForeignKey("PlacanjeId");

                    b.HasOne("FitnessCentar.Services.Database.Raspored", "Raspored")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("RasporedId")
                        .HasConstraintName("FK__Rezervaci__Raspo__6A30C649");

                    b.Navigation("Korisnik");

                    b.Navigation("Placanje");

                    b.Navigation("Raspored");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treneri", b =>
                {
                    b.HasOne("FitnessCentar.Services.Database.Korisnici", "Korisnik")
                        .WithOne("Trener")
                        .HasForeignKey("FitnessCentar.Services.Database.Treneri", "Id")
                        .IsRequired()
                        .HasConstraintName("FK__Treneri__Korisni__01142BA1");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Aktivnosti", b =>
                {
                    b.Navigation("Rasporeds");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Komentari", b =>
                {
                    b.Navigation("OdgovoriNaKomentares");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Korisnici", b =>
                {
                    b.Navigation("Komentaris");

                    b.Navigation("Napredaks");

                    b.Navigation("Placanjas");

                    b.Navigation("Rezervacijes");

                    b.Navigation("Trener")
                        .IsRequired();
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Novosti", b =>
                {
                    b.Navigation("Komentaris");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Raspored", b =>
                {
                    b.Navigation("Rezervacijes");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treneri", b =>
                {
                    b.Navigation("Novostis");

                    b.Navigation("OdgovoriNaKomentares");

                    b.Navigation("Rasporeds");
                });

            modelBuilder.Entity("FitnessCentar.Services.Database.Treningi", b =>
                {
                    b.Navigation("Rasporeds");
                });
#pragma warning restore 612, 618
        }
    }
}
